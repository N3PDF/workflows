name: deploy

on:
  workflow_call:
    inputs:
      python-version:
        type: string
        default: "3.8"
        required: false
        description: "Python version used to test and build the package"
    secrets:
      PYPI_TOKEN:
        required: true
        description: "Token used to deploy package on PyPI"

jobs:
  publish:
    name: üì¶ PyPI (üêç ${{ inputs.python-version }})
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Setup Python üêç
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-path: ~/.virtualenvs
          installer-parallel: true
      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.virtualenvs
          key: ${{ runner.os }}-py-${{ steps.setup-python.outputs.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install package
        run: |
          poetry install
          # run tests just before deployment
          pip install poethepoet
          poe test
      - name: Package the distribution
        run: |
          # add version management tool, same poetry env
          PIP="$(head -n1 $(which poetry) | cut -c 3-) -m pip"
          ${PIP} install poetry-dynamic-versioning
          # package the pure python wheel
          poetry build
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_TOKEN }}
